{"ast":null,"code":"var _jsxFileName = \"/Users/ravilbashirov/Desktop/RaimSchool/react-lessons/src/game.js\";\nimport React, { useState, useEffect } from 'react';\nconst Arr = [1, 2, 3];\nlet counter = 0;\nlet errors = 0;\nexport const Game = ({\n  text\n}) => {\n  const [number, setNumber] = useState();\n  const [status, setStatus] = useState();\n  const [isStarted, setIsStarted] = useState();\n\n  function OnClickButton1() {\n    let number = Arr[Math.floor(Math.random() * Arr.length)];\n    setNumber(number);\n    setStatus('');\n  }\n\n  function OnClickCheck1() {\n    if (number === 1) {\n      setStatus(true);\n      counter++;\n    } else {\n      setStatus(false);\n      errors++;\n    }\n  }\n\n  function OnClickCheck2() {\n    if (number === 2) {\n      setStatus(true);\n      counter++;\n    } else {\n      setStatus(false);\n      errors++;\n    }\n  }\n\n  function OnClickCheck3() {\n    if (number === 3) {\n      setStatus(true);\n      counter++;\n    } else {\n      setStatus(false);\n      errors++;\n    }\n  }\n\n  function GameStart() {\n    if (isStarted == true) {\n      return;\n    }\n\n    setIsStarted(true);\n    setInterval(OnClickButton1, 3000);\n  }\n\n  return React.createElement(\"div\", {\n    class: \"game\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, number), React.createElement(\"button\", {\n    onClick: GameStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0438\\u0433\\u0440\\u0443\"), React.createElement(\"button\", {\n    onClick: OnClickCheck1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"\\u041E\\u0434\\u0438\\u043D\"), React.createElement(\"button\", {\n    onClick: OnClickCheck2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \" \\u0414\\u0432\\u0430\"), React.createElement(\"button\", {\n    onClick: OnClickCheck3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"\\u0422\\u0440\\u0438\")), status && React.createElement(\"div\", {\n    class: \"prav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"\\u041F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E\"), !status && React.createElement(\"div\", {\n    class: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430\"), React.createElement(\"div\", {\n    class: \"count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"\\u0421\\u0447\\u0435\\u0442\\u0447\\u0438\\u043A \\u043E\\u0447\\u043A\\u043E\\u0432:\", counter), React.createElement(\"div\", {\n    class: \"count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0438:\", errors));\n};\nexport default Game;","map":{"version":3,"sources":["/Users/ravilbashirov/Desktop/RaimSchool/react-lessons/src/game.js"],"names":["React","useState","useEffect","Arr","counter","errors","Game","text","number","setNumber","status","setStatus","isStarted","setIsStarted","OnClickButton1","Math","floor","random","length","OnClickCheck1","OnClickCheck2","OnClickCheck3","GameStart","setInterval"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\n\nconst Arr = [\n    1, 2, 3\n]\nlet counter = 0\nlet errors = 0\n\nexport const Game = ({text}) => {\n    const [number, setNumber] = useState()\n    const [status, setStatus] = useState()\n    const [isStarted, setIsStarted] = useState()\n \n    function OnClickButton1(){\n        let number = Arr[Math.floor(Math.random() * Arr.length)]\n        setNumber(number)\n        setStatus('')\n    }\n    function OnClickCheck1(){\n        if(number === 1) {\n            setStatus(true)\n            counter++;\n        }   else {\n            setStatus(false)\n            errors++;\n        }\n    }\n    function OnClickCheck2(){\n        if(number === 2) {\n            setStatus(true)\n            counter++;\n        }   else {\n            setStatus(false)\n            errors++;\n        }\n    }\n    function OnClickCheck3(){\n        if(number === 3) {\n            setStatus(true)\n            counter++;\n        }   else {\n            setStatus(false)\n            errors++;\n        }\n    }\n    function GameStart() {\n        if(isStarted == true) {\n            return\n        }\n        setIsStarted(true)\n        setInterval(OnClickButton1, 3000);\n    }\n   \n\n\n    return(\n        <div class=\"game\">\n            <div class=\"body\">\n                <div class=\"wrap\">{number}</div>\n                <button onClick={GameStart}>Начать игру</button>\n                <button onClick={OnClickCheck1}>Один</button>\n                <button onClick={OnClickCheck2}> Два</button>\n                <button onClick={OnClickCheck3}>Три</button>\n            </div>\n            {status && (\n                <div class=\"prav\">Правильно</div>\n            )}\n            {!status && (\n                <div class=\"error\">Ошибка</div>\n            )}\n            <div class=\"count\">Счетчик очков:{counter}</div>\n            <div class=\"count\">Ошибки:{errors}</div>\n        </div>\n    )\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}